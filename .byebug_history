c
Spree::Product.count
c
Spree::Product.count
c
Spree::Product.count
c
Spree::Product.count
Spree::Product
Spree::Products
c
Spree::Product.count
c
Spree::Product.count
Spree::Product
row.first
product
c
e
c
e
c
e
c
e
c
e
c
e
c
e
c
e
c
params
n
params
c
response.status
response.success?
response.redirect_path
response.redirect_url
c
response.redirect_url
response.headers
response.body
response.methods
response.status
response.success?
response.error?
response
c
response.status
response.success?
response.error?
response.methods
response.success?
response
c
n
params
c
@supplier.errors
n
Spree::Supplier.all
c
@supplier.errors.full_messages
@supploer.errors.full_messages
n
supplier_params
params
c
response
expect(response).to be_success
response.error
response
c
sign_in_as
sign_in
c
expect(supplier).to receive(:destroy)
c
get :index
c
stub_authorization!
get :update
get :show
get :new
get :destroy
expect(Spree::Supplier).to receive(:destroy)
receive(:destroy)
subject.receive(:destroy)
subject receive(:destroy)
subject receive
subject
subject.show
subject.destroy
subject.new
new
destroy
@supplier
subject
c
admin_resource_path(supplier)
c
admin_resource_path(Spree::Supplier.create(name: 'asda'))
admin_resource_path
subject.new.admin_resource_path
subject.admin_resource_path
subject
c
order.errors
order.next
order.nxet
order.state
order.next
order
create :order_with_line_items
order.line_items
order.line_items = [line_item]
order = create :order
order
order = create :order_ready_to_ship
order = create :order_ready_to_ship, variants: [product.master]
order = create :order_with_line_items, variants: [product.master]
order = create :order_with_line_items, products: [product]
order = create :order_with_line_items, product: product
order = create :order_with_line_items, line_items: [line_item]
line_item = create :line_item, product: product
product.line_items
order = create :order_with_line_item
order = create :order_with_line_items
create :line_item, product: product
create :line_item
order = create :order_with_line_items
create :order
Spree::Product.first
Spree::Product.count
c
product.total_on_hand
product.count_on_hand
product.stock
product.can_supply?
product
